/**
 * Templates pr√©-definidos para cria√ß√£o de tarefas
 */

import { TaskTemplate } from '@/types/task'

export class TaskTemplateManager {
  /**
   * Retorna lista de templates pr√©-definidos
   */
  static getTemplates(): TaskTemplate[] {
    return [
      {
        name: 'An√°lise de C√≥digo',
        icon: 'üîç',
        description: 'Analisar complexidade, padr√µes e qualidade do c√≥digo',
        identifierPrefix: 'analise_codigo_',
        executionPromptTemplate: 'Analisar todos os arquivos {linguagem} em {caminho} para identificar {criterios} e fornecer relat√≥rio detalhado com sugest√µes espec√≠ficas de melhoria',
        defaultModel: 'sonnet',
        tags: ['an√°lise', 'qualidade', 'c√≥digo'],
        estimatedDuration: '5-15 min',
        complexity: 'Moderada'
      },
      {
        name: 'Implementa√ß√£o de Feature',
        icon: '‚ö°',
        description: 'Implementar nova funcionalidade completa',
        identifierPrefix: 'feature_',
        executionPromptTemplate: 'Implementar {feature_name} em {tecnologia} no diret√≥rio {caminho}, incluindo {componentes} e testes adequados',
        defaultModel: 'opus',
        tags: ['desenvolvimento', 'feature', 'implementa√ß√£o'],
        estimatedDuration: '30-60 min',
        complexity: 'Complexa'
      },
      {
        name: 'Corre√ß√£o de Bug',
        icon: 'üêõ',
        description: 'Investigar e corrigir problemas espec√≠ficos',
        identifierPrefix: 'bugfix_',
        executionPromptTemplate: 'Investigar e corrigir {problema} no arquivo {arquivo}, implementando {solucao} e adicionando testes de regress√£o',
        defaultModel: 'sonnet',
        tags: ['bug', 'corre√ß√£o', 'debug'],
        estimatedDuration: '10-30 min',
        complexity: 'Moderada'
      },
      {
        name: 'Refatora√ß√£o',
        icon: 'üîß',
        description: 'Melhorar estrutura e qualidade do c√≥digo existente',
        identifierPrefix: 'refactor_',
        executionPromptTemplate: 'Refatorar {componente} em {caminho} para {objetivo}, mantendo funcionalidade existente e melhorando {aspectos}',
        defaultModel: 'opus',
        tags: ['refatora√ß√£o', 'limpeza', 'otimiza√ß√£o'],
        estimatedDuration: '20-45 min',
        complexity: 'Complexa'
      },
      {
        name: 'Documenta√ß√£o',
        icon: 'üìö',
        description: 'Criar ou atualizar documenta√ß√£o',
        identifierPrefix: 'doc_',
        executionPromptTemplate: 'Criar documenta√ß√£o detalhada para {componente} em {formato}, incluindo {secoes} e exemplos pr√°ticos',
        defaultModel: 'haiku',
        tags: ['documenta√ß√£o', 'manual', 'guia'],
        estimatedDuration: '10-25 min',
        complexity: 'Simples'
      },
      {
        name: 'Teste Automatizado',
        icon: 'üß™',
        description: 'Criar su√≠te de testes abrangente',
        identifierPrefix: 'test_',
        executionPromptTemplate: 'Criar testes {tipo_teste} para {componente} em {framework}, cobrindo {cenarios} com pelo menos 90% de cobertura',
        defaultModel: 'sonnet',
        tags: ['teste', 'qa', 'cobertura'],
        estimatedDuration: '15-40 min',
        complexity: 'Complexa'
      },
      {
        name: 'Migra√ß√£o de Dados',
        icon: 'üîÑ',
        description: 'Migrar dados entre sistemas ou formatos',
        identifierPrefix: 'migracao_',
        executionPromptTemplate: 'Migrar dados de {origem} para {destino}, transformando {estrutura} e garantindo {integridade}',
        defaultModel: 'opus',
        tags: ['migra√ß√£o', 'dados', 'transforma√ß√£o'],
        estimatedDuration: '30-90 min',
        complexity: 'Muito Complexa'
      },
      {
        name: 'Otimiza√ß√£o de Performance',
        icon: '‚ö°',
        description: 'Melhorar performance e efici√™ncia',
        identifierPrefix: 'otimizacao_',
        executionPromptTemplate: 'Otimizar {componente} em {caminho} para melhorar {metricas}, implementando {estrategias}',
        defaultModel: 'opus',
        tags: ['performance', 'otimiza√ß√£o', 'efici√™ncia'],
        estimatedDuration: '20-60 min',
        complexity: 'Complexa'
      },
      {
        name: 'Configura√ß√£o CI/CD',
        icon: 'üîß',
        description: 'Configurar pipelines de integra√ß√£o e entrega',
        identifierPrefix: 'cicd_',
        executionPromptTemplate: 'Configurar pipeline {tipo} para {projeto} usando {ferramenta}, incluindo {etapas}',
        defaultModel: 'sonnet',
        tags: ['ci/cd', 'devops', 'automa√ß√£o'],
        estimatedDuration: '30-60 min',
        complexity: 'Complexa'
      },
      {
        name: 'An√°lise de Seguran√ßa',
        icon: 'üîí',
        description: 'Analisar e corrigir vulnerabilidades',
        identifierPrefix: 'seguranca_',
        executionPromptTemplate: 'Analisar {componente} em busca de vulnerabilidades {tipo}, implementando corre√ß√µes para {riscos}',
        defaultModel: 'opus',
        tags: ['seguran√ßa', 'vulnerabilidade', 'auditoria'],
        estimatedDuration: '20-45 min',
        complexity: 'Complexa'
      }
    ]
  }

  /**
   * Gera identificador √∫nico baseado no template
   */
  static generateIdentifier(template: TaskTemplate): string {
    const timestamp = new Date().toISOString()
      .replace(/[:\-T]/g, '')
      .slice(0, 12)
    return `${template.identifierPrefix}${timestamp}`
  }

  /**
   * Substitui vari√°veis no template do prompt
   */
  static fillTemplate(template: string, variables: Record<string, string>): string {
    let filled = template
    Object.entries(variables).forEach(([key, value]) => {
      filled = filled.replace(new RegExp(`\\{${key}\\}`, 'g'), value)
    })
    return filled
  }

  /**
   * Encontra template por nome
   */
  static findTemplate(name: string): TaskTemplate | undefined {
    return this.getTemplates().find(t => t.name === name)
  }
}